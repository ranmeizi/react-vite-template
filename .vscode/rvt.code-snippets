{
  "rvt-page": {
    "prefix": "rvt-page",
    "body": [
      "import React from 'react'",
      "import Page from '@/components/Page'",
      "import { Card, Typography } from 'antd'",
      "",
      "export default function () {",
      "    return <Page>",
      "        {/* 标题 */}",
      "        <Typography.Title level={5}>page 模板</Typography.Title>",
      "        {/* 内容 */}",
      "        <Card>",
      "            rvt-page",
      "        </Card>",
      "    </Page>",
      "}"
    ],
    "description": "Page模板"
  },
  "rvt-list": {
    "prefix": "rvt-list",
    "body": [
      "import React, { useEffect, useState, useMemo } from 'react'",
      "import Page from '@/components/Page'",
      "import { Card, Typography, Form, Button, Space, Table, Divider, Pagination, TableColumnType } from 'antd'",
      "import SearchForm from './SearchForm'",
      "import { usePagination, useRowSelection } from '@/utils/hooks/common'",
      "import { ExpandOutlined } from '@ant-design/icons'",
      "",
      "export default function () {",
      "    // 表单",
      "    const [form] = Form.useForm();",
      "    const [full, setFull] = useState(false)",
      "    // 表格数据 请按照类型替换 unknown ！",
      "    const [list, setList] = useState<unknown>([])",
      "    // 分页器",
      "    const [pagination, setPagination, paginationProps] = usePagination()",
      "    // 选择器",
      "    const { selectionProps, showDetail, reset } = useRowSelection()",
      "",
      "    useEffect(() => {",
      "        getData(1)",
      "    }, [])",
      "",
      "    // 获取数据函数",
      "    async function getData(pageNum = pagination.pageNum, pageSize = pagination.pageSize) {",
      "        // 获取查询条件",
      "        const params = form.getFieldsValue()",
      "        const {",
      "            list,",
      "            ...page",
      "        } = await Promise.resolve({",
      "            // 请求接口",
      "            list: [],",
      "            pageNumber: 1,",
      "            pageSize: 10,",
      "            total: 200",
      "        })",
      "        setList(list)",
      "        reset()",
      "        setPagination({",
      "            pageNum: page.pageNumber,",
      "            pageSize: page.pageSize,",
      "            total: page.total",
      "        })",
      "    }",
      "",
      "    const columns: any[] = useMemo(() => {",
      "        return getColumns({})",
      "    }, [])",
      "",
      "    return <Page>",
      "        {/* 标题 */}",
      "        <Typography.Title level={5}>列表页</Typography.Title>",
      "        {/* 数据过滤 */}",
      "        <Card style={{ marginBottom: '16px' }}>",
      "            {/* 复杂查询框可以拆分文件 */}",
      "            <SearchForm form={form} onSubmit={() => getData()} />",
      "        </Card>",
      "        <div className={full ? 'full-page' : ''}>",
      "            {/* 数据列表 */}",
      "            <Card>",
      "                <div className='f-r j-between'>",
      "                    <Typography.Title level={5}>数据列表</Typography.Title>",
      "                    {/* 按钮组 */}",
      "                    <div>",
      "                        <Space>",
      "                            <Button>导出</Button>",
      "                            <Button type='primary'>新建数据</Button>",
      "                        </Space>",
      "                        <Divider type='vertical' />",
      "                        <Space>",
      "                            <Button type='link' onClick={() => setFull(!full)}><ExpandOutlined /></Button>",
      "                        </Space>",
      "                    </div>",
      "                </div>",
      "            </Card>",
      "            {/* table */}",
      "            <Table",
      "                rowKey='id'",
      "                scroll={{ x: 1300 }}",
      "                columns={columns}",
      "                dataSource={[]}",
      "                pagination={false}",
      "                rowSelection={selectionProps}",
      "            />",
      "            <div style={{ height: '57px' }}></div>",
      "        </div>",
      "",
      "        {/* 批量操作 */}",
      "        <Card className='rvt-page-bottom'>",
      "            <div className='f-r j-between' style={{ width: '100%' }}>",
      "                {showDetail}",
      "                <Space>",
      "                    <Button danger>批量删除</Button>",
      "                    <Button>批量导出</Button>",
      "                    <Pagination {...paginationProps} />",
      "                </Space>",
      "            </div>",
      "        </Card>",
      "    </Page>",
      "}",
      "",
      "// 传入上下文，获取表头配置",
      "function getColumns(ctx: any): TableColumnType<any>[] {",
      "    let a = 1",
      "    return [",
      "        ...Array(10).fill({ title: 'Field_' + a++, width: 120, dataIndex: 'Field_' + a })",
      "    ]",
      "}",
      ""
    ],
    "description": "列表页模板"
  },
  "rvt-searchform": {
    "prefix": "rvt-searchform",
    "body": [
      "import React from 'react'",
      "import { Form, FormInstance, Input, Space, Button, Col, Row } from 'antd'",
      "",
      "type MyFormProps = {",
      "    form: FormInstance,",
      "    onSubmit?: () => void,",
      "    expand?: boolean // 高级搜索？",
      "}",
      "",
      "export default function ({",
      "    form,",
      "    onSubmit,",
      "    expand = false",
      "}: MyFormProps) {",
      "    return <Form",
      "        className='rvt-search-form'",
      "        form={form}",
      "    >",
      "        <Row gutter={[16, 16]}>",
      "            <Col span={6}>",
      "                <Form.Item name='name' label='名称'>",
      "                    <Input placeholder='模糊搜索' />",
      "                </Form.Item>",
      "            </Col>",
      "            <Row justify='end' className='w-100' gutter={[16, 16]}>",
      "                <Space>",
      "                    <Button onClick={() => form.resetFields()}>重置</Button>",
      "                    <Button type='primary' onClick={() => onSubmit && onSubmit()}>查询</Button>",
      "                </Space>",
      "            </Row>",
      "        </Row>",
      "    </Form>",
      "}",
      ""
    ],
    "description": "列表页查询表单-栅格布局"
  },
  "rvt-edit": {
    "prefix": "rvt-edit",
    "body": [
      "import React from 'react'",
      "import Page from '@/components/Page'",
      "import { Form } from 'antd'",
      "import Myform from './Form'",
      "",
      "export default function () {",
      "    const [form] = Form.useForm()",
      "    const { closeCurrentPage } = Page.useTabController()",
      "    async function onSubmit() {",
      "        const data = await form.validateFields()",
      "",
      "        console.log(data)",
      "    }",
      "    return <Page>",
      "        {/* 内容 */}",
      "        <Myform form={form} onSubmit={onSubmit} onClose={closeCurrentPage} />",
      "    </Page>",
      "}",
      ""
    ],
    "description": "详情页"
  },
  "rvt-form": {
    "prefix": "rvt-form",
    "body": [
      "import React from 'react'",
      "import { Form, FormInstance, Input, Space, Button, Col, Row, Typography, Card } from 'antd'",
      "",
      "type MyFormProps = {",
      "    form: FormInstance",
      "    onSubmit?: () => void",
      "    onClose?: () => void",
      "}",
      "",
      "const layout = {",
      "    labelCol: {",
      "        span: 8",
      "    },",
      "    wrapperCol: {",
      "        span: 16",
      "    }",
      "}",
      "",
      "export default function ({",
      "    form,",
      "    onSubmit,",
      "    onClose",
      "}: MyFormProps) {",
      "    return <Form",
      "        onFinish={onSubmit}",
      "        form={form}",
      "    >",
      "        {/* 标题 */}",
      "        <Typography.Title level={5}>基本信息</Typography.Title>",
      "        <Card>",
      "            <Row>",
      "                <Col span={6} offset={2}>",
      "                    <Form.Item",
      "                        {...layout}",
      "                        label='角色名称'",
      "                        name='roleName'",
      "                        rules={[{ required: true, message: '请输入角色名称!' }]}",
      "                    >",
      "                        <Input />",
      "                    </Form.Item>",
      "                </Col>",
      "            </Row>",
      "        </Card>",
      "        <Row justify='center' className='mt-16'>",
      "            <Space>",
      "                <Button onClick={() => onClose && onClose()}>取消</Button>",
      "                <Button type='primary' htmlType='submit'>查询</Button>",
      "            </Space>",
      "        </Row>",
      "    </Form>",
      "}",
      ""
    ],
    "description": "详情页表单"
  },
  "rvt-component": {
    "prefix": "rvt-component",
    "body": [
      "import React from 'react'",
      "",
      "type Props = {",
      "",
      "}",
      "",
      "export default function ({",
      "",
      "}: Props) {",
      "    return <div>rvt-component</div>",
      "}",
      ""
    ],
    "description": "带类型的函数组件"
  },
  "ignore-eslint": {
    "prefix": "ignore-eslint",
    "body": [
      "// eslint-disable-next-line ",
    ],
    "description": "忽略eslint"
  },
  "service-type": {
    "prefix": "service-type",
    "body": [
      "export namespace Types {",
      "",
      "}",
      "",
      "export namespace Params {",
      "    ",
      "}",
      "",
      "export namespace DTO {",
      "    ",
      "}"
    ],
    "description": "service-type"
  }
}